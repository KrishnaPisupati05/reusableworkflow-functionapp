name: Reusable Function App Deployment + Security Scan

on:
  workflow_call:
    inputs:
      function-app-name:
        required: true
        type: string
      resource-group:
        required: true
        type: string
      slot-name:
        required: true
        type: string
      build-zip-path:
        required: true
        type: string
      working-directory:
        required: true
        type: string
      node-version:
        required: false
        type: string
        default: '18'

jobs:
  scan-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}

      # 3️⃣ Validate zip exists
      - name: Validate build.zip exists
        run: |
          if [ ! -f "${{ inputs.build-zip-path }}" ]; then
            echo "Error: build.zip not found at ${{ inputs.build-zip-path }}"
            exit 1
          fi
          echo "build.zip found at ${{ inputs.build-zip-path }}"

      # 4️⃣ Install Node.js dependencies for npm audit
      - name: Install Node.js dependencies
        working-directory: ${{ inputs.working-directory }}
        run: npm ci --production

      # 5️⃣ NPM audit for vulnerabilities
      - name: NPM Audit
        working-directory: ${{ inputs.working-directory }}
        run: npm audit --audit-level=moderate

      # 6️⃣ Trivy scan of the zip
      - name: Scan build.zip for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: archive
          scan-path: ${{ inputs.build-zip-path }}

      # 7️⃣ Azure Login
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 8️⃣ Create slot if it does not exist
      - name: Create slot if not exists
        id: create-slot
        continue-on-error: true
        run: |
          SLOT_EXISTS=$(az functionapp deployment slot list \
            --name ${{ inputs.function-app-name }} \
            --resource-group ${{ inputs.resource-group }} \
            --query "[?name=='${{ inputs.slot-name }}'] | length(@)" -o tsv)

          if [ "$SLOT_EXISTS" -eq 0 ]; then
            echo "Creating slot: ${{ inputs.slot-name }}"
            az functionapp deployment slot create \
              --name ${{ inputs.function-app-name }} \
              --resource-group ${{ inputs.resource-group }} \
              --slot ${{ inputs.slot-name }} \
              --configuration-source ${{ inputs.function-app-name }}
          else
            echo "Slot ${{ inputs.slot-name }} already exists."

      # 9️⃣ Deploy build.zip via Azure CLI
      - name: Deploy Function App via ZIP
        run: |
          az functionapp deployment source config-zip \
            --resource-group ${{ inputs.resource-group }} \
            --name ${{ inputs.function-app-name }} \
            --slot ${{ inputs.slot-name }} \
            --src ${{ inputs.build-zip-path }}
