name: Reusable Function App Deploy (Minimal â€“ No Enforcement, Simplified)

on:
  workflow_call:
    inputs:
      trigger_event:
        required: true
        type: string
        description: "Original event name from caller (github.event_name)"
      deploy_to_prod:
        required: true
        type: string
        description: "True only for manual prod deployment"
      application:
        required: false
        type: string
        description: "App identifier (used for prod environment naming, e.g. app-1)"
      node-version:
        required: false
        type: string
        default: "20.x"
      test_function_app_name:
        required: false
        type: string
        description: "Function App name for TEST"
      prod_function_app_name:
        required: false
        type: string
        description: "Function App name for PROD"
      functionapp_folder:
        required: false
        type: string
        description: "Folder to zip and deploy"
    secrets:
      PUBLISH_PROFILE_TEST:
        required: false
      PUBLISH_PROFILE_PROD:
        required: false

jobs:
  validate:
    name: Validate / Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}

      - name: Install dependencies
        run: |
          cd ${{ inputs.functionapp_folder }}
          npm install

      - name: Run tests
        run: |
          cd ${{ inputs.functionapp_folder }}
          npm test

      - name: Build app
        run: |
          cd ${{ inputs.functionapp_folder }}
          npm run build

      - name: Lint app
        run: |
          cd ${{ inputs.functionapp_folder }}
          npm run lint


  deploy-test:
    name: Deploy TEST
    runs-on: ubuntu-latest
    needs: validate
    if: ${{ inputs.trigger_event == 'push'
           && contains(fromJSON('["dev","devfeatures","development"]'), github.ref_name) }}
    env:
      FUNCTION_APP_NAME: ${{ inputs.test_function_app_name }}
    steps:
      - uses: actions/checkout@v4
      - name: Create ZIP for deployment
        run: |
          cd ${{ inputs.functionapp_folder }}
          zip -r ../functionapp.zip ./*
      - name: Deploy (TEST)
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.FUNCTION_APP_NAME }}
          package: functionapp.zip
          publish-profile: ${{ secrets.PUBLISH_PROFILE_TEST }}

  deploy-prod:
    name: Deploy PROD
    runs-on: ubuntu-latest
    needs: validate
    if: ${{ inputs.trigger_event == 'workflow_dispatch'
           && github.ref_name == 'master' }}
    environment: ${{ inputs.application }}
    env:
      FUNCTION_APP_NAME: ${{ inputs.prod_function_app_name }}
    steps:
      - uses: actions/checkout@v4
      - name: Zip source
        run: |
          cd "${{ inputs['source-path'] }}"
          zip -r ../functionapp.zip . -x ".git/*"
      - name: Deploy (PROD)
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.FUNCTION_APP_NAME }}
          package: functionapp.zip
          publish-profile: ${{ secrets.PUBLISH_PROFILE_PROD }}