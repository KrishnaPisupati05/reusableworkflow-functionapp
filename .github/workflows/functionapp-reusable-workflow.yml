name: Reusable Function App Deploy (Branch-based, Approval only for Production)

on:
  workflow_call:
    inputs:
      node-version:
        description: "Node.js version."
        required: false
        type: string
        default: "20.x"
      functionapp_folder:
        description: "Folder containing the Function App project."
        required: false
        type: string
        default: "."
      test_function_app_name:
        description: "Azure Function App name for TEST deployments."
        required: false
        type: string
      prod_function_app_name:
        description: "Azure Function App name for PROD deployments."
        required: false
        type: string
      deploy_to_prod:
        description: "Set to true to indicate you intend to deploy to production.
        required: false
        type: string
    secrets:
      PUBLISH_PROFILE_TEST:
        required: false
      PUBLISH_PROFILE_PROD:
        required: false

env:
  TEST_BRANCHES_JSON: '["dev","devfeatures","development"]'

jobs:

  validate:
    name: Validate / Build
    runs-on: ubuntu-latest
    outputs:
      is_prod: ${{ steps.flags.outputs.is_prod }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Determine prod flag (master branch only)
        id: flags
        run: |
          BRANCH="${GITHUB_REF_NAME}"
          if [ "${BRANCH}" = "master" ]; then
            echo "is_prod=true" >> "$GITHUB_OUTPUT"
          else
            echo "is_prod=false" >> "$GITHUB_OUTPUT"
          fi
          echo "Branch: ${BRANCH}"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs['node-version'] }}

      - name: Install dependencies
        working-directory: ${{ inputs.functionapp_folder }}
        run: npm ci

      - name: Run tests
        working-directory: ${{ inputs.functionapp_folder }}
        run: npm test

      - name: Lint
        working-directory: ${{ inputs.functionapp_folder }}
        run: npm run lint --if-present

      - name: Build
        working-directory: ${{ inputs.functionapp_folder }}
        run: npm run build --if-present

  approval:
    name: Approval (Prod only)
    runs-on: ubuntu-latest
    needs: validate
    if: ${{ needs.validate.outputs.is_prod == 'true' }}
    environment:
      name: Production
    steps:
      - name: Approval context
        run: |
          echo "Production deployment requires manual approval."

  deploy:
    name: Deploy (Test or Prod)
    runs-on: ubuntu-latest
    needs: [validate, approval]
    if: |
      contains(fromJSON('["master"]'), github.ref_name) ||
      contains(fromJSON('["dev","devfeatures","development"]'), github.ref_name)
    env:
      IS_PROD: ${{ github.ref_name == 'master' }}
      FUNCTION_APP_NAME: ${{ github.ref_name == 'master' && inputs.prod_function_app_name || inputs.test_function_app_name }}
      PUBLISH_PROFILE: ${{ github.ref_name == 'master' && secrets.PUBLISH_PROFILE_PROD || secrets.PUBLISH_PROFILE_TEST }}
      FUNCTIONAPP_FOLDER: ${{ inputs.functionapp_folder }}
    steps:
  
      - name: Checkout
        uses: actions/checkout@v4

      - name: Package Function App
        run: |
          set -e
          cd "${FUNCTIONAPP_FOLDER}"
          zip -r ../functionapp.zip . -x "*.git*"
          ls -lh ../functionapp.zip

      - name: Deploy to Azure Functions
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.FUNCTION_APP_NAME }}
          package: functionapp.zip
          publish-profile: ${{ env.PUBLISH_PROFILE }}

      - name: Success Echo
        run: |
          if [ "${IS_PROD}" = "true" ]; then
            echo "✅ Production deployment succeeded for ${FUNCTION_APP_NAME}"
          else
            echo "✅ Test deployment succeeded for ${FUNCTION_APP_NAME}"
          fi