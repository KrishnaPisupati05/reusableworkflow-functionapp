name: Reusable Function App Deployment

on:
  workflow_call:
    inputs:
      function-app-name:
        required: true
        type: string
      resource-group:
        required: true
        type: string
      environment:
        required: true
        type: string
      slot-name:
        required: false
        type: string
        default: ""
      swap-to-prod:
        required: false
        type: boolean
        default: false
      swap-only:
        required: false
        type: boolean
        default: false
      working-directory:
        required: true
        type: string
      package-path:
        required: true
        type: string
      node-version:
        required: true
        type: string

jobs:
  validate:
    name: Validate & Build
    if: ${{ inputs.swap-only != true }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}

      - name: Install Dependencies
        run: npm install
        working-directory: ${{ inputs.working-directory }}

      - name: Lint Application
        run: npm run lint
        working-directory: ${{ inputs.working-directory }}

      - name: Run Tests
        run: npm test
        working-directory: ${{ inputs.working-directory }}

      - name: Build Application
        run: npm run build
        working-directory: ${{ inputs.working-directory }}

  approve_before_slot_deploy:
    name: Await Approval for Slot Deployment
    needs: validate
    if: ${{ inputs.swap-only != true }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Approval Message
        run: |
          SLOT="${{ inputs.slot-name }}"
          if [ -z "$SLOT" ]; then
            SLOT="Production"
          fi
          echo "⏳ Awaiting approval for ${{ inputs.function-app-name }} to deploy to slot: $SLOT"

  deploy:
    name: Deploy to Function App Slot
    needs: approve_before_slot_deploy
    if: ${{ inputs.swap-only != true }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Deploy to Azure Function App (Custom Slot)
        if: ${{ inputs.slot-name != '' }}
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ inputs.function-app-name }}
          slot-name: ${{ inputs.slot-name }}
          package: ${{ inputs.package-path }}
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}

      - name: Deployment Info
        run: |
          SLOT="${{ inputs.slot-name }}"
          if [ -z "$SLOT" ]; then
            SLOT="Production"
          fi
          echo "✅ Deployed ${{ inputs.function-app-name }} to slot: $SLOT"

  approve_before_swap:
    name: Await Approval for Swap to Production
    needs: [deploy]
    if: ${{ inputs.swap-to-prod == true && inputs.slot-name != '' }}
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - name: Approval Message
        run: |
          echo "⏳ Awaiting approval to swap ${{ inputs.slot-name }} slot to Production for ${{ inputs.function-app-name }}"

  swap:
    name: Swap Slot to Production
    needs: approve_before_swap
    if: ${{ inputs.swap-to-prod == true && inputs.slot-name != '' }}
    runs-on: ubuntu-latest
    steps:
      - name: Swap Slots
        uses: azure/cli@v1
        with:
          inlineScript: |
            az functionapp deployment slot swap \
              --name ${{ inputs.function-app-name }} \
              --resource-group ${{ inputs.resource-group }} \
              --slot ${{ inputs.slot-name }} \
              --target-slot Production
