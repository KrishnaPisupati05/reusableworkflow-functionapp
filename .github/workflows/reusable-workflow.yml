name: Reusable Function App Deployment

on:
  workflow_call:
    inputs:
      function-app-name:
        required: true
        type: string
      resource-group:
        required: true
        type: string
      environment:
        required: true
        type: string
      slot-name:
        required: true
        type: string
      swap-to-prod:
        required: false
        type: string
        default: "false"
      swap-only:
        required: false
        type: string
        default: "false"
      working-directory:
        required: true
        type: string
      node-version:
        required: true
        type: string

    secrets:
      AZURE_CREDENTIALS:
        required: true

jobs:
  # -----------------------------
  # Scenario 1: Deploy to Staging/Test only
  # -----------------------------

  01_Validate_Build_NodeJS_Artifact:
    name: ‚úÖ Validate & Build Node.js Artifact
    if: ${{ inputs.swap-only != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
      - name: Install Dependencies
        run: npm install
        working-directory: ${{ inputs.working-directory }}
      - name: Lint Project
        run: npm run lint
        working-directory: ${{ inputs.working-directory }}
      - name: Run Tests
        run: npm test
        working-directory: ${{ inputs.working-directory }}
      - name: Build Project
        run: npm run build
        working-directory: ${{ inputs.working-directory }}
      - name: Package Artifact
        run: zip -r full-artifact.zip ${{ inputs.working-directory }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: full-artifact
          path: full-artifact.zip

  02_Scan_NodeJS_Artifact_For_Vulnerabilities:
    name: üîç Vulnerability Scan for Node.js Artifact
    needs: 01_Validate_Build_NodeJS_Artifact
    if: ${{ inputs.swap-only != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: full-artifact
          path: ./artifact
      - name: Unzip Artifact
        run: unzip ./artifact/full-artifact.zip -d ./artifact
      - name: Run Vulnerability Scan
        run: |
          echo "üîç Running Node.js vulnerability scan..."
          npm install
          if npm audit --audit-level=high; then
            echo "‚úÖ Vulnerability scan passed."
          else
            echo "‚ùå Vulnerability scan failed! Fix high/critical issues before deploying."
            exit 1
          fi
        working-directory: ./artifact/${{ inputs.working-directory }}

  03_Approval_Staging_Deployment:
    name: ‚è≥ Awaiting Approval: Staging Deployment
    needs: 02_Scan_NodeJS_Artifact_For_Vulnerabilities
    if: ${{ inputs.swap-only != 'true' }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - run: echo "‚è≥ Awaiting approval to deploy ${{ inputs.function-app-name }} to slot '${{ inputs.slot-name }}'..."

  04_Deploy_Artifact_To_Staging_Slot:
    name: üöÄ Deploy Artifact to Staging Slot
    needs: 03_Approval_Staging_Deployment
    if: ${{ inputs.swap-only != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Ensure Slot Exists
        run: |
          echo "Checking if slot '${{ inputs.slot-name }}' exists..."
          if ! az functionapp deployment slot show \
              --name ${{ inputs.function-app-name }} \
              --resource-group ${{ inputs.resource-group }} \
              --slot ${{ inputs.slot-name }} >/dev/null 2>&1; then
            echo "Slot '${{ inputs.slot-name }}' not found. Creating..."
            az functionapp deployment slot create \
              --name ${{ inputs.function-app-name }} \
              --resource-group ${{ inputs.resource-group }} \
              --slot ${{ inputs.slot-name }}
          else
            echo "Slot '${{ inputs.slot-name }}' already exists. Skipping creation."
          fi
      - name: Download Artifact for Deployment
        uses: actions/download-artifact@v4
        with:
          name: full-artifact
          path: ./artifact
      - name: Deploy Artifact to Slot
        run: |
          echo "üöÄ Deploying to slot '${{ inputs.slot-name }}'..."
          az functionapp deployment source config-zip \
            --src ./artifact/full-artifact.zip \
            --name ${{ inputs.function-app-name }} \
            --resource-group ${{ inputs.resource-group }} \
            --slot ${{ inputs.slot-name }}

  # -----------------------------
  # Scenario 2: Deploy to Staging + Swap to Production
  # -----------------------------

  05_Approval_Staging_To_Prod_Swap:
    name: ‚è≥ Awaiting Approval: Staging ‚Üí Production Swap
    needs: 04_Deploy_Artifact_To_Staging_Slot
    if: ${{ inputs.swap-only != 'true' && inputs.swap-to-prod == 'true' }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - run: echo "‚è≥ Awaiting approval to swap slot '${{ inputs.slot-name }}' to Production..."

  06_Swap_Staging_Slot_To_Production:
    name: üîÑ Swap Staging Slot to Production
    needs: 05_Approval_Staging_To_Prod_Swap
    if: ${{ inputs.swap-only != 'true' && inputs.swap-to-prod == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Swap Slots via CLI
        run: |
          echo "üîÑ Swapping slot '${{ inputs.slot-name }}' to Production..."
          az functionapp deployment slot swap \
            --resource-group ${{ inputs.resource-group }} \
            --name ${{ inputs.function-app-name }} \
            --slot ${{ inputs.slot-name }} \
            --target-slot Production
          echo "‚úÖ Swap successful!"

  # -----------------------------
  # Scenario 3: Swap Only (No Deploy)
  # -----------------------------

  07_Approval_Only_Swap_To_Production:
    name: ‚è≥ Awaiting Approval: Swap Only to Production
    if: ${{ inputs.swap-only == 'true' && inputs.swap-to-prod == 'true' }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - run: echo "‚è≥ Awaiting approval to swap ONLY slot '${{ inputs.slot-name }}' to Production..."

  08_Swap_Only_Slot_To_Production:
    name: üîÑ Swap Only Slot to Production
    needs: 07_Approval_Only_Swap_To_Production
    if: ${{ inputs.swap-only == 'true' && inputs.swap-to-prod == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Swap Slot via CLI
        run: |
          echo "üîÑ Swapping slot '${{ inputs.slot-name }}' to Production..."
          az functionapp deployment slot swap \
            --resource-group ${{ inputs.resource-group }} \
            --name ${{ inputs.function-app-name }} \
            --slot ${{ inputs.slot-name }} \
            --target-slot Production
          echo "‚úÖ Swap successful!"
