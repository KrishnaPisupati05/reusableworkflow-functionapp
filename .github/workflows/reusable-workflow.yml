name: Reusable Function App Deployment

on:
  workflow_call:
    inputs:
      function-app-name:
        required: true
        type: string
      resource-group:
        required: true
        type: string
      environment:
        required: true
        type: string
      slot-name:
        required: true
        type: string
      swap-to-prod:
        required: false
        type: string
        default: "false"
      swap-only:
        required: false
        type: string
        default: "false"
      working-directory:
        required: true
        type: string
      node-version:
        required: true
        type: string

    secrets:
      AZURE_CREDENTIALS:
        required: true

jobs:
  # -----------------------------
  # 1️⃣ Validate & Build Node.js Artifact
  # -----------------------------
  validate_build:
    name: Validate and Build Node.js Artifact
    if: ${{ inputs.swap-only != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
      - name: Install Dependencies
        run: npm install
        working-directory: ${{ inputs.working-directory }}
      - name: Lint Project
        run: npm run lint
        working-directory: ${{ inputs.working-directory }}
      - name: Run Tests
        run: npm test
        working-directory: ${{ inputs.working-directory }}
      - name: Build Project
        run: npm run build
        working-directory: ${{ inputs.working-directory }}
      - name: Package Artifact
        run: |
          cd ${{ inputs.working-directory }}
          zip -r ../full-artifact.zip .
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: full-artifact
          path: full-artifact.zip

  # -----------------------------
  # 2️⃣ Scan Node.js Artifact for Vulnerabilities
  # -----------------------------
  scan_artifact:
    name: Vulnerability Scan for Node.js Artifact
    needs: validate_build
    if: ${{ inputs.swap-only != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: full-artifact
          path: ./artifact
      - name: Unzip Artifact
        run: unzip ./artifact/full-artifact.zip -d ./artifact
      - name: Run Vulnerability Scan
        run: |
          cd ./artifact
          npm install
          if npm audit --audit-level=high; then
            echo "Vulnerability scan passed."
          else
            echo "Vulnerability scan failed! Fix high/critical issues before deploying."
            exit 1
          fi

  # -----------------------------
  # 3️⃣ Approval for Staging Deployment
  # -----------------------------
  approve_staging_deploy:
    name: Awaiting Approval for Staging Deployment
    needs: scan_artifact
    if: ${{ inputs.slot-name != '' && inputs.swap-only != 'true' }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - run: echo "Awaiting approval to deploy ${{ inputs.function-app-name }} to slot '${{ inputs.slot-name }}'..."

  # -----------------------------
  # 4️⃣ Deploy Artifact to Staging Slot
  # -----------------------------
  deploy_to_slot:
    name: Deploy Artifact to Staging Slot
    needs: approve_staging_deploy
    if: ${{ inputs.slot-name != '' && inputs.swap-only != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Ensure Slot Exists
        run: |
          if ! az functionapp deployment slot show \
              --name ${{ inputs.function-app-name }} \
              --resource-group ${{ inputs.resource-group }} \
              --slot ${{ inputs.slot-name }} >/dev/null 2>&1; then
            az functionapp deployment slot create \
              --name ${{ inputs.function-app-name }} \
              --resource-group ${{ inputs.resource-group }} \
              --slot ${{ inputs.slot-name }}
          fi
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: full-artifact
          path: ./artifact
      - name: Install Dependencies in Artifact
        run: |
          cd ./artifact
          npm install
      - name: Deploy Artifact to Slot
        run: |
          cd ./artifact
          zip -r full-artifact.zip .
          az functionapp deployment source config-zip \
            --src full-artifact.zip \
            --name ${{ inputs.function-app-name }} \
            --resource-group ${{ inputs.resource-group }} \
            --slot ${{ inputs.slot-name }}

  # -----------------------------
  # 5️⃣ Approval Before Swap to Production
  # -----------------------------
  approve_staging_to_prod_swap:
    name: Awaiting Approval for Swap to Production
    needs: deploy_to_slot
    if: ${{ inputs.slot-name != '' && inputs.swap-only != 'true' && inputs.swap-to-prod == 'true' }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - run: echo "Awaiting approval to swap slot '${{ inputs.slot-name }}' to Production..."

  # -----------------------------
  # 6️⃣ Swap Staging Slot to Production
  # -----------------------------
  swap_staging_to_prod:
    name: Swap Staging Slot to Production
    needs: approve_staging_to_prod_swap
    if: ${{ inputs.slot-name != '' && inputs.swap-only != 'true' && inputs.swap-to-prod == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Swap Slots
        run: |
          az functionapp deployment slot swap \
            --resource-group ${{ inputs.resource-group }} \
            --name ${{ inputs.function-app-name }} \
            --slot ${{ inputs.slot-name }} \
            --target-slot Production

  # -----------------------------
  # 7️⃣ Approval Only Swap to Production
  # -----------------------------
  approve_only_swap:
    name: Awaiting Approval for Swap Only to Production
    if: ${{ inputs.slot-name != '' && inputs.swap-only == 'true' && inputs.swap-to-prod == 'true' }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - run: echo "Awaiting approval to swap ONLY slot '${{ inputs.slot-name }}' to Production..."

  # -----------------------------
  # 8️⃣ Swap Only Slot to Production
  # -----------------------------
  swap_only_to_prod:
    name: Swap Only Slot to Production
    needs: approve_only_swap
    if: ${{ inputs.slot-name != '' && inputs.swap-only == 'true' && inputs.swap-to-prod == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Swap Slot
        run: |
          az functionapp deployment slot swap \
            --resource-group ${{ inputs.resource-group }} \
            --name ${{ inputs.function-app-name }} \
            --slot ${{ inputs.slot-name }} \
            --target-slot Production
